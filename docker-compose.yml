services:
  postgres:
    build:
      context: ./charondb-init
    container_name: charon-db
    environment:
      POSTGRES_DB: charondb
      POSTGRES_USER: charondb_owner
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_DBOWNER}
      POSTGRES_PASSWORD_FLYWAY: ${POSTGRES_PASSWORD_FLYWAY}
      POSTGRES_PASSWORD_CHARONDATACOLLECTOR: ${POSTGRES_PASSWORD_CHARONDATACOLLECTOR}
      POSTGRES_PASSWORD_CHARONCORE: ${POSTGRES_PASSWORD_CHARONCORE}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  kafka:
    hostname: kafka
    image: apache/kafka:latest
    container_name: charon-kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "9092:9092"
    # healthcheck:
    #   test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
    #   interval: 10s
    #   retries: 10


volumes:
  pgdata:
